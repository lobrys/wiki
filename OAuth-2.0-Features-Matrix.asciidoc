The following matrix outlines all the OAuth 2.0 Client and Resource Server features implemented by the various projects within the Spring portfolio.
The matrix may be used to determine which project(s) to use based on your OAuth 2.0 Client and Resource Server requirements.

NOTE: Spring Security 5.0 introduced new Client support for the OAuth 2.0 Authorization Framework and OpenID Connect 1.0. Spring Security 5.1 introduced new Resource Server support as well as additional Client support for different grant types. Spring Security 5.2 continued this pattern, providing more support for Resource Server and Client. This matrix will be kept up-to-date as we complete new features.

For additional information, please see the <<frequently-asked-questions,Frequently Asked Questions>>.


[[oauth2-client-features-matrix]]
== Client Support

[cols="<40,^15,^15,^15,^15",options="header"]
|===
|
| https://projects.spring.io/spring-security/[Spring Security^] (5.2+)
| https://projects.spring.io/spring-security-oauth/[Spring Security OAuth^] (2.3+)
| https://cloud.spring.io/spring-cloud-security/[Spring Cloud Security^] (1.2+)
| https://projects.spring.io/spring-boot/[Spring Boot OAuth2^] (1.5.x)

| [red]#*_Authorization Grants_*# 4+|
| Authorization Code | &#10004; | &#10004; | |
| Implicit | &#10004; | &#10004; | |
| Resource Owner Password Credentials | &#10004; | &#10004; | |
| Client Credentials | &#10004; | &#10004; | |
| Refresh Token | &#10004; | &#10004; | |

| [red]#*_Client Authentication Methods_*# 4+|
| HTTP Basic | &#10004; | &#10004; | |
| HTTP POST | &#10004; | &#10004; | |

| [red]#*_HTTP Client Support_*# 4+|
| RestTemplate *^[1]^* | &#10004; | &#10004; | |
| WebClient | &#10004; | | |

| [red]#*_User Authentication_*# 4+|
| OAuth 2.0 Login (SSO) | &#10004; | | | &#10004;
| UserInfo Endpoint Support | &#10004; | | | &#10004;

| [red]#*_Access Token Storage Management_*# 4+|
| In-Memory | &#10004; | | |
| JDBC | &#10004; | &#10004; | |
|===

1. RestTemplate may collaborate with https://docs.spring.io/spring-security/site/docs/current/reference/htmlsingle/#oauth2Client-authorized-manager-provider[DefaultOAuth2AuthorizedClientManager] to realize full support.

[[oauth2-resource-server-features-matrix]]
== Resource Server Support

[cols="<40,^15,^15,^15,^15",options="header"]
|===
|
| https://projects.spring.io/spring-security/[Spring Security^] (5.2+)
| https://projects.spring.io/spring-security-oauth/[Spring Security OAuth^] (2.3+)
| https://cloud.spring.io/spring-cloud-security/[Spring Cloud Security^] (1.2+)
| https://projects.spring.io/spring-boot/[Spring Boot OAuth2^] (1.5.x)

| [red]#*_Access Token Formats_*# 4+|
| Opaque | &#10004; | &#10004; | |
| JSON Web Token (JWT) | &#10004; | &#10004; | |

| [red]#*_Access Token Usage_*# 4+|
| Token Relay | &#10004; | | &#10004; |

| [red]#*_Access Token Verification_*# 4+|
| Opaque (using Introspection Endpoint) | &#10004; | &#10004; | |
| JSON Web Signature (MAC) | &#10004; | &#10004; | |
| JSON Web Signature (RSA) | &#10004; | &#10004; | |
| JSON Web Signature (using JSON Web Key) | &#10004; | &#10004; | |
| Custom JWT Claims Set Verifier | &#10004; | &#10004; | |
|===

[[oauth2-authorization-server-features-matrix]]
== Authorization Server Support

[cols="<40,^15,^15,^15,^15",options="header"]
|===
|
| https://github.com/spring-projects-experimental/spring-authorization-server/[Spring Authorization Server^] (0.0.1)
| https://projects.spring.io/spring-security-oauth/[Spring Security OAuth^] (2.3+)
| https://cloud.spring.io/spring-cloud-security/[Spring Cloud Security^] (1.2+)
| https://projects.spring.io/spring-boot/[Spring Boot OAuth2^] (1.5.x)

| [red]#*_Authorization Grants_*# 4+|
| Authorization Code | &#10004; | &#10004; | |
| Implicit | | &#10004; | |
| Resource Owner Password Credentials | | &#10004; | |
| Client Credentials | &#10004; | &#10004; | |
| Refresh Token | | &#10004; | |

| [red]#*_Protocol Endpoints_*# 4+|
| Authorization Endpoint | &#10004; | &#10004; | |
| Token Endpoint | &#10004; | &#10004; | |
| User Consent Endpoint | | &#10004; | |
| Introspection Endpoint | | &#10004; | |

| [red]#*_Access Token Formats_*# 4+|
| Opaque | | &#10004; | |
| JSON Web Signature (MAC) | | &#10004; | |
| JSON Web Signature (RSA) | &#10004; | &#10004; | |

| [red]#*_Access Token Storage Management_*# 4+|
| In-Memory | &#10004; | &#10004; | |
| JDBC | | &#10004; | |
| Redis | | &#10004; | |

| [red]#*_Client Authentication Methods_*# 4+|
| HTTP Basic | &#10004; | &#10004; | |
| HTTP POST | | &#10004; | |

| [red]#*_Client Registration Storage Management_*# 4+|
| In-Memory | &#10004; | &#10004; | |
| JDBC | | &#10004; | |

| [red]#*_Authorization Code Storage Management_*# 4+|
| In-Memory | &#10004; | &#10004; | |
| JDBC | | &#10004; | |

| [red]#*_User Consent Storage Management_*# 4+|
| In-Memory | | &#10004; | |
| JDBC | | &#10004; | |
|===

[[frequently-asked-questions]]
= Frequently Asked Questions

[qanda]
*What is the future of OAuth 2.0 support in Spring Security?*::
  The next generation of OAuth 2.0 support is being added throughout the Spring Security 5 release train.
  As of Spring Security 5.2, there is built-in support for OAuth 2.0 Login, Client, and Resource Server, with a breakdown visible in the above matrix.
  We plan to continue to add features for Client and Resource Server pertaining to the https://oauth.net/2/[OAuth 2.0 Core and Extensions^], https://openid.net/connect/[OpenID Connect 1.0^] and
  https://jose.readthedocs.io/en/latest/[Javascript Object Signing and Encryption (JOSE)^] specifications.
*Where can I find out more information on which OAuth 2.0 and OpenID Connect 1.0 features will be implemented in Spring Security 5?*::
  You may track upcoming features in the https://github.com/spring-projects/spring-security/issues[Spring Security GitHub^] repo using the
  https://github.com/spring-projects/spring-security/labels/in%3A%20oauth2[in: oauth2^] label.
*Where can I find samples and documentation for Spring Security 5 OAuth 2.0 support?*::
  Spring Security 5 introduced the new OAuth 2.0 Login feature along with a
  https://github.com/spring-projects/spring-security/tree/5.2.0.RELEASE/samples/boot/oauth2login[sample^] and detailed
  https://docs.spring.io/spring-security/site/docs/current/reference/htmlsingle/#oauth2login[documentation^]. Several other OAuth 2.0 samples are available in the same repo.
  We will continue to provide samples and documentation as we build out new features.
*Are there new features being implemented in Spring Security OAuth 2.3+?*::
  We will provide bug/security fixes and consider adding minor enhancements.
  Our plan going forward is to build all the features currently in Spring Security OAuth into Spring Security 5.x.
  After Spring Security has reached feature parity with Spring Security OAuth,
  we will continue to support bugs and security fixes for at least one year.
*Does Spring Boot 2.0 provide support for Spring Security OAuth?*::
  Spring Boot 2.0 has dropped support for Spring Security OAuth.
  However, it provides support for OAuth 2.0 Login, OAuth 2.0 Client, and OAuth 2.0 Resource Server in Spring Security 5.
*Is there a way to integrate Spring Security OAuth in Spring Boot 2.0?*::
  The https://github.com/spring-projects/spring-security-oauth2-boot[Spring Security OAuth Boot 2 Autoconfig^] project is a port
  of the Spring Security OAuth auto-configuration contained in Spring Boot 1.5.x.
  If you would like to use Spring Security OAuth in Spring Boot 2.0,
  you must explicitly include the following dependency in your project:
  - *groupId:* `org.springframework.security.oauth.boot`
  - *artifactId:* `spring-security-oauth2-autoconfigure`
